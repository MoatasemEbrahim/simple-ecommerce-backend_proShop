tags:
- name: "Orders"
  description: "Everything about Orders"


/orders/:
  post:
    summary: "create new order"
    operationId: "createOrder"
    consumes:
    - "application/json"
    tags:
    - "Orders"
    security:
    - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              itemsPrice: 
                type: number
                example: 599.99
              taxPrice: 
                type: number
                example: 83.99860000000001
              shippingPrice: 
                type: integer
                format: int32
                example: 0
              items: 
                type: array
                items: 
                  type: object
                  properties: 
                    name: 
                      type: string
                      example: iPhone 11 Pro 256GB Memory
                    image: 
                      type: string
                      example: http://localhost:5000/public/images/phone.jpg
                    price: 
                      type: number
                      example: 599.99
                    quantity: 
                      type: integer
                      format: int32
                      example: 1
                    product: 
                      type: string
                      example: 5fe6846b898b7133664275f2
              paymentMethod: 
                type: string
                example: PayPal
              shippingAddress: 
                type: object
                properties: 
                  address: 
                    type: string
                    example: asdas
                  postalCode: 
                    type: string
                    example: 12321
                  city: 
                    type: string
                    example: sdasd
                  country: 
                    type: string
                    example: asdasd

    responses:
      201:
        description: "Order data"
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Order'




/orders/{id}:
  get:
    summary: "Get one order by id"
    operationId: "getOrder"
    consumes:
    - "application/json"
    tags:
    - "Orders"
    parameters:
    - name: "id"
      in: "path"
      description: "Order id"
      required: true
      type: "string"
    security:
      - bearerAuth: []
    responses:
      200:
        description: "Order data"
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Order'

      401:
        description: "User not authorized"

      404:
        description: "Order not found"

  post:
    summary: "update order to paid"
    operationId: "updateOrderToPaid"
    consumes:
    - "application/json"
    tags:
    - "Orders"
    security:
    - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              paymentResult: 
                type: object
                properties:
                  id: 
                    type: string
                    example: 5fe6846b898b7133664275f2
                  status: 
                    type: string
                    example: success
                  updateTime: 
                    type: string
                    example: Date Mon May 03 2021 23:56:26 GMT+0200 (Eastern European Standard Time)
                  email: 
                    type: string
                    example: user@email.com
        
    responses:
      200:
        description: "Order data"
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Order'
                - type: object
                  properties:
                    isPaid:
                      type: boolean
                      example: true
      400:
        description: "Order not found"


/orders/myOrders/:
  get:
    summary: "Get user orders"
    operationId: "getUserOrders"
    consumes:
    - "application/json"
    tags:
    - "Orders"
    security:
      - bearerAuth: []
    responses:
      200:
        description: "user orders"
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                $ref: '#/components/schemas/Order'

      401:
        description: "User not authorized"




